11-09-2024
Created a venv named-penv.(python -m venv penv)
        (activated it from penv>scripts>activate)
Installed django in penv (pip install django)
Now start project through (django -admin startproject ekart_project)
        Now directory into ekart_project and  create app
Created app through (python manage.py startapp accounts)
In settings add in installed apps (ekart_project>settings.py>INSTALLED_APPS)
   add app name.
 
Created  >gitignore file added all from gitignore.io (django)
also env name is penv so added and changed it in .gitignore file also
                .penv
                penv/
                PENV/
                penv.bak/ in .gitignore so that it dont show in git repo
  12-09-2024
  In accounts app >models.py
   created AccountsManager,Accounts,UserProfile in account>models.py
        AccountsManager has user and superuser creation
        Accounts has username,email,first_name,last_name
        UserProfile has user which has onetoone relationship with Accounts user ,full_address 

also in setting.py of ekart_project
        added AUTH_USER_MODEL = 'accounts.Accounts'
        added AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']
      #  It takes privilege of accounts.Accounts otehrwise user goes into other app or random.
Regsitered in admin.py of ekart_project
                admin.site.register(Account)
                admin.site.register(UserProfile)
Installed   pillow for image processing  through
                        pip install pillow
Applied migration and migrate through 
                python manage.py makemigrations
                python manage.py migrate 
Create superuser through python manage.py createsuperuser
        email-pankajmendla@gmail.com
        username-iampm07
        pswrd-Pankaj123
14-09-24
Created category app added in settings.py
                class Category(models.Model):
                        category_name= models.CharField(max_length=50,unique=True)
                        slug=models.SlugField(max_length=100,unique=True)
                        description=models.TextField(max_length=255,blank=True)
                        cat_image=models.ImageField(upload_to='photos/categories',blank=True)
Registered in admin.py through
                       from .models import Category
                        
                        admin.site.register(Category)
Created store app added in settings.py
                
from category.models import Category
from django.urls import reverse

        class Product(models.Model):
                product_name=models.CharField(max_length=200,unique=True)
                slug = models.SlugField(max_length=200,unique=True)
                description=models.TextField(max_length=500,blank=True)
                price=models.IntegerField()
                images=models.ImageField(upload_to='photos/products')
                stock=models.IntegerField()
                is_available=models.BooleanField(default=True)
                category=models.ForeignKey(Category,on_delete=models.CASCADE)
                created_date=models.DateTimeField(auto_now_add=True)
                modified_date = models.DateTimeField(auto_now=True)

                def __str__(self):
                        return self.product_name
Registered in admin.py
                  from . import models

                admin.site.register(models.Product)   
Applied migration for category and products.

Created models in store 
        
class Variation(models.Model):
    product=models.ForeignKey(Product,on_delete=models.CASCADE)
    variation_category=models.CharField(max_length=100,choices=variation_category_choice)
    variation_value=models.CharField(max_length=100)
    is_active=models.BooleanField(default=True)
    created_date=models.DateTimeField(auto_now=True)

    def __unicode__(self):
        return self.product
        Registered in admin.py of store app

Created new app orders
        added in settings.py
Created Payment and order model in orders>model.py